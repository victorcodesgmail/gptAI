{"ast":null,"code":"var _jsxFileName = \"/home/boniface/Desktop/watched/gpt/src/components/form/Form.jsx\";\nimport React from 'react';\nimport './form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Registration Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please fill out this form with the required information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      method: \"post\",\n      action: \"https://register-demo.freecodecamp.org\",\n      children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"first-name\",\n          children: [\"Enter Your First Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"first-name\",\n            name: \"first-name\",\n            type: \"text\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 56\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"last-name\",\n          children: [\"Enter Your Last Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"last-name\",\n            name: \"last-name\",\n            type: \"text\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 54\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"email\",\n          children: [\"Enter Your Email: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"email\",\n            name: \"email\",\n            type: \"email\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"new-password\",\n          children: [\"Create a New Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"new-password\",\n            name: \"new-password\",\n            type: \"password\",\n            pattern: \"[a-z0-5]{8,}\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 58\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"personal-account\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"personal-account\",\n            type: \"radio\",\n            name: \"account-type\",\n            class: \"inline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 39\n          }, this), \" Personal Account\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"business-account\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"business-account\",\n            type: \"radio\",\n            name: \"account-type\",\n            class: \"inline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 39\n          }, this), \" Business Account\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"terms-and-conditions\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"terms-and-conditions\",\n            type: \"checkbox\",\n            required: true,\n            name: \"terms-and-conditions\",\n            class: \"inline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 11\n          }, this), \" I accept the \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://www.freecodecamp.org/news/terms-of-service/\",\n            children: \"terms and conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 128\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"profile-picture\",\n          children: [\"Upload a profile picture: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"profile-picture\",\n            type: \"file\",\n            name: \"file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 64\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"age\",\n          children: [\"Input your age (years): \", /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"age\",\n            type: \"number\",\n            name: \"age\",\n            min: \"13\",\n            max: \"120\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"referrer\",\n          children: [\"How did you hear about us?\", /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"referrer\",\n            name: \"referrer\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"(select one)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1\",\n              children: \"freeCodeCamp News\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"2\",\n              children: \"freeCodeCamp YouTube Channel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"3\",\n              children: \"freeCodeCamp Forum\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"4\",\n              children: \"Other\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"bio\",\n          children: [\"Provide a bio:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"bio\",\n            name: \"bio\",\n            rows: \"3\",\n            cols: \"30\",\n            placeholder: \"I like coding on the beach...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = Form;\nexport default Form;\n\n// import React, { useState, useEffect, useRef } from 'react';\n// import { Link, useHistory } from 'react-router-dom';\n// import './students.css';\n\n// const Students = () => {\n//   const [isCameraPaused, setCameraPaused] = useState(false); // Initialize camera state\n//   const cameraFeedRef = useRef(null); // Reference to the camera feed element\n//   const history = useHistory(); // Get the history object for navigation\n\n//   useEffect(() => {\n//     // Get the camera feed element and initialize the camera\n//     const cameraFeed = cameraFeedRef.current;\n\n//     navigator.mediaDevices\n//       .getUserMedia({ video: true })\n//       .then(stream => {\n//         cameraFeed.srcObject = stream;\n\n//         // Add a click event listener to the video element to toggle freezing/unfreezing.\n//         cameraFeed.addEventListener('click', () => {\n//           if (isCameraPaused) {\n//             // If the camera is frozen, resume the video stream.\n//             cameraFeed.play();\n//             setCameraPaused(false);\n//           } else {\n//             // If the camera is not frozen, pause the video stream.\n//             cameraFeed.pause();\n//             setCameraPaused(true);\n//           }\n//         });\n//       })\n//       .catch(error => {\n//         console.error('Error accessing camera:', error);\n//       });\n//   }, []); // Empty dependency array to run this effect only once when the component mounts\n\n//   const handleLogin = () => {\n//     history.push('./page'); // Navigate to the 'page' route\n//   };\n\n//   return (\n//     <div>\n//       <div className=\"section__padding\">\n//         <h1>HEY STUDENT, WELCOME TO EDU CAFE</h1>\n//         <h2>Kindly fill in the details below, and we will get your profile</h2>\n//         <h1>Account Details</h1>\n//         <h3>USERNAME*</h3>\n//         <input type=\"text\" placeholder=\"ENTER YOUR USERNAME\" />\n//         <h3>Email address *</h3>\n//         <input type=\"email\" placeholder=\"ENTER YOUR EMAIL\" />\n//         <h3>Password*</h3>\n//         <input type=\"password\" placeholder=\"Password\" />\n//         <h3>Confirm password</h3>\n//         <input type=\"password\" placeholder=\"Confirm your password\" />\n//       </div>\n\n//       <div className=\"section__padding\">\n//         <h1>Profile Details</h1>\n//         <h3>Name</h3>\n//         <input type=\"text\" placeholder=\"ENTER YOUR FULL NAME\" />\n//         <h3>Field of Research</h3>\n//         <input type=\"text\" placeholder=\"Enter your field of research\" />\n//         <h3>Biography</h3>\n//         <input type=\"text\" placeholder=\"What do you want your students to know about?\" />\n//         <h3>Profile Photo</h3>\n//         <video className=\"video\" id=\"cameraFeed\" autoPlay ref={cameraFeedRef}></video>\n//         <button onClick={() => handleCapture()}>\n//           {isCameraPaused ? 'Resume' : 'Capture'}\n//         </button>\n//         <h3>OR</h3>\n//         <input type=\"text\" placeholder=\"Copy and paste email address of your profile picture\" />\n//         <button type=\"button\" onClick={handleLogin}>\n//           Submit\n//         </button>\n//         <Link to=\"card\">Login as a Student</Link>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Students;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Form","children","fileName","_jsxFileName","lineNumber","columnNumber","method","action","for","id","name","type","required","pattern","class","href","min","max","value","rows","cols","placeholder","_c","$RefreshReg$"],"sources":["/home/boniface/Desktop/watched/gpt/src/components/form/Form.jsx"],"sourcesContent":["import React from 'react'\nimport './form.css'\n\nconst Form = () => {\n\n  return (\n    <div>\n        <h1>Registration Form</h1>\n    <p>Please fill out this form with the required information</p>\n    <form method=\"post\" action='https://register-demo.freecodecamp.org'>\n      <fieldset>\n        <label for=\"first-name\">Enter Your First Name: <input id=\"first-name\" name=\"first-name\" type=\"text\" required /></label>\n        <label for=\"last-name\">Enter Your Last Name: <input id=\"last-name\" name=\"last-name\" type=\"text\" required /></label>\n        <label for=\"email\">Enter Your Email: <input id=\"email\" name=\"email\" type=\"email\" required /></label>\n        <label for=\"new-password\">Create a New Password: <input id=\"new-password\" name=\"new-password\" type=\"password\" pattern=\"[a-z0-5]{8,}\" required /></label>\n      </fieldset>\n      <fieldset>\n        <label for=\"personal-account\"><input id=\"personal-account\" type=\"radio\" name=\"account-type\" class=\"inline\" /> Personal Account</label>\n        <label for=\"business-account\"><input id=\"business-account\" type=\"radio\" name=\"account-type\" class=\"inline\" /> Business Account</label>\n        <label for=\"terms-and-conditions\">\n          <input id=\"terms-and-conditions\" type=\"checkbox\" required name=\"terms-and-conditions\" class=\"inline\" /> I accept the <a href=\"https://www.freecodecamp.org/news/terms-of-service/\">terms and conditions</a>\n        </label>\n      </fieldset>\n      <fieldset>\n        <label for=\"profile-picture\">Upload a profile picture: <input id=\"profile-picture\" type=\"file\" name=\"file\" /></label>\n        <label for=\"age\">Input your age (years): <input id=\"age\" type=\"number\" name=\"age\" min=\"13\" max=\"120\" /></label>\n        <label for=\"referrer\">How did you hear about us?\n          <select id=\"referrer\" name=\"referrer\">\n            <option value=\"\">(select one)</option>\n            <option value=\"1\">freeCodeCamp News</option>\n            <option value=\"2\">freeCodeCamp YouTube Channel</option>\n            <option value=\"3\">freeCodeCamp Forum</option>\n            <option value=\"4\">Other</option>\n          </select>\n        </label>\n        <label for=\"bio\">Provide a bio:\n          <textarea id=\"bio\" name=\"bio\" rows=\"3\" cols=\"30\" placeholder=\"I like coding on the beach...\"></textarea>\n        </label>\n      </fieldset>\n      <input type=\"submit\" value=\"Submit\" />\n    </form>\n    </div>\n  )\n}\n\nexport default Form\n\n\n// import React, { useState, useEffect, useRef } from 'react';\n// import { Link, useHistory } from 'react-router-dom';\n// import './students.css';\n\n// const Students = () => {\n//   const [isCameraPaused, setCameraPaused] = useState(false); // Initialize camera state\n//   const cameraFeedRef = useRef(null); // Reference to the camera feed element\n//   const history = useHistory(); // Get the history object for navigation\n\n//   useEffect(() => {\n//     // Get the camera feed element and initialize the camera\n//     const cameraFeed = cameraFeedRef.current;\n\n//     navigator.mediaDevices\n//       .getUserMedia({ video: true })\n//       .then(stream => {\n//         cameraFeed.srcObject = stream;\n\n//         // Add a click event listener to the video element to toggle freezing/unfreezing.\n//         cameraFeed.addEventListener('click', () => {\n//           if (isCameraPaused) {\n//             // If the camera is frozen, resume the video stream.\n//             cameraFeed.play();\n//             setCameraPaused(false);\n//           } else {\n//             // If the camera is not frozen, pause the video stream.\n//             cameraFeed.pause();\n//             setCameraPaused(true);\n//           }\n//         });\n//       })\n//       .catch(error => {\n//         console.error('Error accessing camera:', error);\n//       });\n//   }, []); // Empty dependency array to run this effect only once when the component mounts\n\n//   const handleLogin = () => {\n//     history.push('./page'); // Navigate to the 'page' route\n//   };\n\n//   return (\n//     <div>\n//       <div className=\"section__padding\">\n//         <h1>HEY STUDENT, WELCOME TO EDU CAFE</h1>\n//         <h2>Kindly fill in the details below, and we will get your profile</h2>\n//         <h1>Account Details</h1>\n//         <h3>USERNAME*</h3>\n//         <input type=\"text\" placeholder=\"ENTER YOUR USERNAME\" />\n//         <h3>Email address *</h3>\n//         <input type=\"email\" placeholder=\"ENTER YOUR EMAIL\" />\n//         <h3>Password*</h3>\n//         <input type=\"password\" placeholder=\"Password\" />\n//         <h3>Confirm password</h3>\n//         <input type=\"password\" placeholder=\"Confirm your password\" />\n//       </div>\n\n//       <div className=\"section__padding\">\n//         <h1>Profile Details</h1>\n//         <h3>Name</h3>\n//         <input type=\"text\" placeholder=\"ENTER YOUR FULL NAME\" />\n//         <h3>Field of Research</h3>\n//         <input type=\"text\" placeholder=\"Enter your field of research\" />\n//         <h3>Biography</h3>\n//         <input type=\"text\" placeholder=\"What do you want your students to know about?\" />\n//         <h3>Profile Photo</h3>\n//         <video className=\"video\" id=\"cameraFeed\" autoPlay ref={cameraFeedRef}></video>\n//         <button onClick={() => handleCapture()}>\n//           {isCameraPaused ? 'Resume' : 'Capture'}\n//         </button>\n//         <h3>OR</h3>\n//         <input type=\"text\" placeholder=\"Copy and paste email address of your profile picture\" />\n//         <button type=\"button\" onClick={handleLogin}>\n//           Submit\n//         </button>\n//         <Link to=\"card\">Login as a Student</Link>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Students;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}